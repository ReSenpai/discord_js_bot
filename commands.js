const regex = require('./regex')
const { Attachment, RichEmbed, Emoji, Guild, Client } = require('discord.js');

async function executeCommand(message, user, query) {
    // Buy questions guide
    if (regex.buy_question.test(message.content)) {
        console.log(`Noda / MSG / HM / Buy question info`);
        const shop = new RichEmbed()
            .setTitle(`–ù–æ–¥–∞-—à–æ–ø!`)
            .setColor(0xebe134)
            .setDescription(`
            –í–∞—à –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç: ${user.coins}
            –ö—É–ø–∏—Ç—å –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å: 25 —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç
            –ö—É–ø–∏—Ç—å –ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å: 100 —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç

            –î–ª—è –ø–æ–∫—É–ø–∫–∏ –æ–±—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: !–æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å
            –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ª–∏—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: !–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å
            `);
        message.channel.send(shop);
    // Buy common_questions guide
    } else if (regex.buy_common_question.test(message.content)) {
        console.log(`Noda / MSG / HM / Buy common question info`);
        if(coins >= 25){
            const commonQuestion = new RichEmbed()
            .setTitle(`–ü–æ–∫—É–ø–∫–∞ –æ–±—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.`)
            .setColor(0xebe134)
            .setDescription(`
            –í–∞—à –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç: ${user.coins}
            –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –ª—É—á—à–µ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–∞–∫ —à–∞–±–ª–æ–Ω:
            !–≤–æ–ø—Ä–æ—Å [–¢—É—Ç –ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–∫–∞—Ö] [–ê —Ç—É—Ç –≤–∞—à –æ—Ç–≤–µ—Ç, —Ç–∞–∫ –∂–µ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–∫–∞—Ö]
            `);
            message.channel.send(commonQuestion);
        } else {
            const commonQuestionFalse = new RichEmbed()
            .setTitle(`–û—Ç–∫–∞–∑–∞–Ω–æ.`)
            .setColor(0xFF0000)
            .setDescription(`
            –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç, –≤–∞—à –±–∞–ª–∞–Ω—Å: ${user.coins}
            `);
            message.channel.send(commonQuestionFalse);
        }  
    // Buy personal_question guide 
    } else if (regex.buy_personal_question.test(message.content)) {
        console.log(`Noda / MSG / HM / Buy personal question info`);
        if(coins >= 100){
            let plate = new RichEmbed()
            .setTitle(`–ü–æ–∫—É–ø–∫–∞ –ª–∏—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.`)
            .setColor(0xebe134)
            .setDescription(`
            –í–∞—à –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç: ${user.coins}
            –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –ª—É—á—à–µ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–∞–∫ —à–∞–±–ª–æ–Ω:
            !–≤–æ–ø—Ä–æ—Å [–¢—É—Ç –ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–∫–∞—Ö] [–ê —Ç—É—Ç –≤–∞—à –æ—Ç–≤–µ—Ç, —Ç–∞–∫ –∂–µ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–∫–∞—Ö] [–ª–∏—á–Ω—ã–π]
            `);
            message.channel.send(plate);
        } else {
            let plate_false = new RichEmbed()
            .setTitle(`–û—Ç–∫–∞–∑–∞–Ω–æ.`)
            .setColor(0xFF0000)
            .setDescription(`
            –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç, –≤–∞—à –±–∞–ª–∞–Ω—Å: ${user.coins}
            `);
            message.channel.send(plate_false);
        }  
    // buy questions with code
    } else if (regex.just_question.test(message.content)) {
        console.log(`Noda / MSG / HM / BQ / Buy a question!`);
        let args = message.content.split(" [");
        if (user.coins >= 25 && args.length >= 2) {
            console.log(`Noda / MSG / HM / BQ / Enough money for a common question and the question has proper structure`);
            user.question = args[1].slice(0, -1);
            user.answer = args[2].slice(0, -1);
            try {
                user.question_type = args[3].slice(0, -1);
            } catch (error) {
                user.question_type = 0;
            }
            console.log(`Noda / MSG / HM / BQ / Question type ${user.question_type}`);
            if (regex.personal_question.test(user.question_type)) {
                if (user.coins >= 100) {
                    console.log(`Noda / MSG / HM / BQ / Personal question was bought`);
                    user.question_type = 1;
                    user.coins -= 100;
                } else {
                    console.log(`Noda / MSG / HM / BQ / Not enough money for personal question`);
                    bot.send(`–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ª–∏—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.coins} –º–æ–Ω–µ—Ç!`)
                    return;
                }
            } else if (user.question_type === 0 || common_question.test(user.question_type)) {
                console.log(`Noda / MSG / HM / BQ / Common question was bought`);
                user.question_type = 0;
                user.coins -= 25;
            } else {
                console.log(`Noda / MSG / HM / BQ / Incorrect question type`);
                let plate = new RichEmbed()
                .setTitle(`–û—à–∏–±–∫–∞`)
                .setColor(0xFF0000)
                .setDescription(`
                –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞.
                –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ª–∏—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –≤ –∫–æ–Ω—Ü–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –æ–±—ã—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –¥–æ–ø–∏—à–∏—Ç–µ [–ª–∏—á–Ω—ã–π].
                –î–ª—è –ø–æ–∫—É–ø–∫–∏ –æ–±—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –º–æ–∂–Ω–æ –≤–æ–æ–±—â–µ –Ω–µ –ø–∏—Å–∞—Ç—å —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ [–æ–±—â–∏–π]
                `)
                bot.send(plate);
                return;
            }
            user.questions += 1;
            console.log(`Noda / MSG / HM / BQ / Q: '${user.question}', A: '${user.answer}', T: '${user.question_type}'`);
            const commonQuestionBye = new RichEmbed()
            .setTitle(`–ü–æ–∫—É–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞.`)
            .setColor(0x36D904)
            .setDescription(`
            –í–∞—à –≤–æ–ø—Ä–æ—Å: ${user.question}
            –í–∞—à –æ—Ç–≤–µ—Ç: ${user.answer}
            –¢–∏–ø –≤–æ–ø—Ä–æ—Å–∞: ${user.question_type === 0 ? '–æ–±—â–∏–π' : '–ª–∏—á–Ω—ã–π'}
            –û—Å—Ç–∞–ª–æ—Å—å —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç: ${user.coins}
            –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüòò
            `);
            message.channel.send(commonQuestionBye);
        } else {
            console.log(`Noda / MSG / HM / Not enough money for a common question`);
            message.channel.send(`${args.length >= 2 ? '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —á–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç, –≤–∞—à –±–∞–ª–∞–Ω—Å:' + user.coins : '–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–ª–∏ —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–∞, –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã, –Ω–∞–ø–∏—Å–∞–≤ "!–∫—É–ø–∏—Ç—å –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å" –∏–ª–∏ "!–∫—É–ø–∏—Ç—å –ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å"'}`);
        }
    // Show profiles
    } else if (regex.show_profile.test(message.content)) {
        console.log(`Noda / MSG / HM / Show profiles`);
        try {
            let embed = new RichEmbed()
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞: ${user.server_name}`)
            .setColor(0x0a4bff)
            .setDescription(`
            :trophy:LVL: ${user.lvl}
            :jigsaw:XP: ${user.exp}
            :moneybag:–ß–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç: ${user.coins}
            :key:–û–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∫—É–ø–ª–µ–Ω–æ: ${user.questions}
            `)
            .setThumbnail(user.avatar)
            message.channel.send(embed);
        } catch (error) {
            let embed = new RichEmbed()
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞: ${user.user_name}`)
            .setColor(0x0a4bff)
            .setDescription(`
            :trophy:LVL: ${user.lvl}
            :jigsaw:XP: ${user.exp}
            –ß–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç: ${user.coins} :moneybag:
            :key:–û–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∫—É–ø–ª–µ–Ω–æ: ${user.questions}
            `)
            .setThumbnail(user.avatar)
            message.channel.send(embed);
        }
    // Throw a cube
    } else if (regex.cube.test(message.content)) {
        console.log(`Noda / MSG / HM / Throw a cube`);
        message.channel.send(Math.ceil(Math.random() * 10)); 
    } else if (regex.money.test(message.content)) {
        console.log(`Noda / MSG / HM / QN / Give some coins`);
        // give 100 coins
        user.coins += 100;
        let pushCoins = new RichEmbed()
        .setTitle(`–ó–∞–ø—Ä–æ—Å —Ö–∞–ª—è–≤–Ω—ã—Ö –º–æ–Ω–µ—Ç–æ–∫`)
        .setColor(0x36D904)
        .setDescription(`
        –î–µ—Ä–∂–∏ 100 –º–æ–Ω–µ—Ç–æ–∫ :moneybag:
        –ß–µ–∫–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç: ${user.coins} 
        `);
        message.channel.send(pushCoins);
    } else {
        message.channel.send('–ù–µ –Ω–∞–¥–æ –º–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–≤–∞—Ç—å, –æ–∫–µ–π?!');
    }
}

module.exports.exec = executeCommand;